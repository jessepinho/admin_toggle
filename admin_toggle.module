<?php

/**
 * @file
 * Module file for the Admin Toggle module.
 */

/**
 * Implements hook_menu().
 */
function admin_toggle_menu() {
  $items['admin/config/administration/admin_toggle'] = array(
    'title' => 'Admin Toggle',
    'description' => 'Modify Admin Toggle settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('admin_toggle_admin_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'admin_toggle.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_init().
 */
function admin_toggle_init() {
  if (user_access('use admin toggle')) {
    $settings = array(
      'adminToggle' => array(
        'key' => variable_get('admin_toggle_key', '`'),
        'selector' => admin_toggle_get_selector(),
      ),
    );
    drupal_add_js($settings, 'setting');
    drupal_add_js(drupal_get_path('module', 'admin_toggle') . '/admin_toggle.js');
  }
}

/**
 * Implements hook_permission().
 */
function admin_toggle_permission() {
  return array(
    'use admin toggle' => array(
      'title' => t('Use Admin Toggle'),
      'description' => t('Use Admin Toggle functionality.'),
    ),
    'administer admin toggle' => array(
      'title' => t('Administer Admin Toggle'),
      'description' => t('Modify settings for Admin Toggle.'),
    ),
  );
}

/**
 * Return the jQuery selector for admin elements to toggle.
 */
function admin_toggle_get_selector() {
  // Build an array of selectors.
  $selectors = array(
    variable_get('admin_toggle_custom_selector'),
    '.admin-toggle',
  );
  return implode(',', $selectors);
}

/**
 * Implements hook_menu_local_tasks_alter().
 */
function admin_toggle_menu_local_tasks_alter(&$data, $router_item, $root_path) {
  dsm(func_get_args());
  if ($data['actions']['count']) {
    foreach ($data['actions']['output'] as $key => $val) {
      $data['actions']['output'][$key]['#link']['localized_options']['attributes'] = array('class' => array('admin-toggle-child'));
    }
  }
}
